import type { Metadata } from "next";
import "./globals.css";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v13-appRouter";
import SessionWrapper from "@/components/SessionWrapper";
import { ModalProvider } from "@/hooks/useModal";
import SnackbarProviderClient from "@/components/SnackbarProviderClient";
import { HeaderProvider } from "@/hooks/HeaderContext";
import Header from "@/components/Header/Header";
import localFont from "next/font/local";
import { ThemeProvider as NextThemesProvider } from "next-themes";
import { ThemeRegistry } from "@/hooks/ThemeRegistry";
import ErrorBoundary from "@/components/Modals/ErrorBoundary";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const Unbounded = localFont({
  src: [
    {
      path: "../public/fonts/Unbounded.ttf",
      weight: "400",
      style: "normal",
    },
  ],
  variable: "--font-Unbounded",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const themeScript = `
    (function() {
      try {
        const saved = localStorage.getItem('themeMode');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const mode = saved || (prefersDark ? 'dark' : 'light');
        document.documentElement.setAttribute('data-theme', mode);
      } catch (e) {}
    })();
  `;

  return (
    <html
      lang="ru"
      className={Unbounded.variable}
      suppressHydrationWarning
    >
      <head>
        <script dangerouslySetInnerHTML={{ __html: themeScript }} />
      </head>
      <body>
        <ErrorBoundary>
          <SessionWrapper>
            <AppRouterCacheProvider>
              <NextThemesProvider>
                <ThemeRegistry>
                  <ModalProvider>
                    <SnackbarProviderClient>
                      <HeaderProvider>
                        <Header>{children}</Header>
                      </HeaderProvider>
                    </SnackbarProviderClient>
                  </ModalProvider>
                </ThemeRegistry>
              </NextThemesProvider>
            </AppRouterCacheProvider>
          </SessionWrapper>
        </ErrorBoundary>
      </body>
    </html>
  );
}
